## Use the R_HOME indirection to support installations of multiple R version
PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"`

## As an alternative, one can also add this code in a file 'configure'
##
##    PKG_LIBS=`${R_HOME}/bin/Rscript -e "Rcpp:::LdFlags()"`
## 
##    sed -e "s|@PKG_LIBS@|${PKG_LIBS}|" \
##        src/Makevars.in > src/Makevars
## 
## which together with the following file 'src/Makevars.in'
##
##    PKG_LIBS = @PKG_LIBS@
##
## can be used to create src/Makevars dynamically. This scheme is more
## powerful and can be expanded to also check for and link with other
## libraries.  It should be complemented by a file 'cleanup'
##
##    rm src/Makevars
##
## which removes the autogenerated file src/Makevars. 
##
## Of course, autoconf can also be used to write configure files. This is
## done by a number of packages, but recommended only for more advanced users
## comfortable with autoconf and its related tools.

CXX_STD = CXX11

PKG_CPPFLAGS = -I. -Iccd -DR_BUILD -DDOUBLE_PRECISION -Werror

SOURCES = $(wildcard *.cpp ccd/*.cpp ccd/drivers/*.cpp ccd/engine/*.cpp \
					ccd/io/*.cpp ccd/priors/*.cpp utils/*.cpp)

# OBJECTS.ccd = \
#     ccd/CcdInterface.o \
#     ccd/CompressedDataMatrix.o \
#     ccd/CyclicCoordinateDescent.o \
#     ccd/ModelData.o
# 
# OBJECTS.drivers = \
#     ccd/drivers/AbstractCrossValidationDriver.o \
#     ccd/drivers/AbstractDriver.o \
#     ccd/drivers/AbstractSelector.o \
#     ccd/drivers/AutoSearchCrossValidationDriver.o \
#     ccd/drivers/BootstrapDriver.o \
#     ccd/drivers/BootstrapSelector.o \
#     ccd/drivers/CrossValidationSelector.o \
#     ccd/drivers/GridSearchCrossValidationDriver.o \
#     ccd/drivers/HierarchyAutoSearchCrossValidationDriver.o \
#     ccd/drivers/HierarchyGridSearchCrossValidationDriver.o \
#     ccd/drivers/ProportionSelector.o
#     
# OBJECTS.engine = \
#     ccd/engine/AbstractModelSpecifics.o
#     
# OBJECTS.utils = \
#     utils/HParSearch.o
#      
# OBJECTS = $(OBJECTS.ccd) $(OBJECTS.drivers) \
#			$(OBJECTS.engine) $(OBJECTS.utils) 

OBJECTS = $(SOURCES:.cpp=.o)
